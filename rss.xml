<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"><channel><title>cpro95.github.io</title><description>All About Codings!</description><link>https://cpro95.github.io/</link><item><title>웹 개발 배우기 4편 - 자바스크립트 조건문, 불리언과 if문으로 논리 마스터하기</title><link>https://cpro95.github.io/posts/2025-09-19-learning-web-dev-part4-javascript-booleans-if/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-09-19-learning-web-dev-part4-javascript-booleans-if/</guid><description>웹 개발 배우기 4편에서는 자바스크립트의 핵심 논리 도구인 불리언, 비교 연산자, if 조건문을 배웁니다. 숫자 맞추기 게임 예제를 통해 코드의 흐름을 제어하는 방법을 익혀보세요.</description><pubDate>Fri, 19 Sep 2025 01:24:02 GMT</pubDate></item><item><title>웹 개발 배우기 3편 - 자바스크립트 배열 완전 정복, 여러 데이터를 한 번에 관리하기</title><link>https://cpro95.github.io/posts/2025-09-19-learning-web-dev-part3-javascript-arrays/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-09-19-learning-web-dev-part3-javascript-arrays/</guid><description>웹 개발 배우기 시리즈 3편입니다. 여러 데이터를 한 번에 관리하는 자바스크립트 배열의 개념과 사용법을 배우고, 매직 8볼 예제를 통해 실전 활용법을 익힙니다.</description><pubDate>Fri, 19 Sep 2025 01:07:51 GMT</pubDate></item><item><title>웹 개발 배우기 2편 - 자바스크립트 문자열과 메소드, 드디어 첫 앱 만들기</title><link>https://cpro95.github.io/posts/2025-09-19-learning-web-dev-part2-javascript-strings-methods/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-09-19-learning-web-dev-part2-javascript-strings-methods/</guid><description>웹 개발 배우기 시리즈 2편입니다. 자바스크립트의 문자열과 메소드 개념을 배우고, 클릭 카운터와 온도 변환기 같은 간단한 웹 앱을 직접 만들어보며 이벤트 처리 방법을 익힙니다.</description><pubDate>Fri, 19 Sep 2025 00:58:27 GMT</pubDate></item><item><title>웹 개발 배우기 1편 - 자바스크립트 첫걸음, 숫자와 변수 그리고 함수 완전 정복</title><link>https://cpro95.github.io/posts/2025-09-19-learning-web-dev-part1-javascript-basics-numbers-variables-functions/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-09-19-learning-web-dev-part1-javascript-basics-numbers-variables-functions/</guid><description>웹 개발을 처음 시작하는 분들을 위해 자바스크립트의 가장 기본 개념인 숫자, 변수, 함수 사용법을 쉽고 자세하게 설명합니다. 브라우저 콘솔을 활용한 실습으로 프로그래밍의 기초를 다져보세요.</description><pubDate>Fri, 19 Sep 2025 00:43:43 GMT</pubDate></item><item><title>리액트를 배우셨군요 유감입니다 4편 (테스트, 생태계, 그리고 체념의 미학)</title><link>https://cpro95.github.io/posts/2025-08-23-react-a-satirical-guide-part-4-testing-ecosystem-acceptance/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-08-23-react-a-satirical-guide-part-4-testing-ecosystem-acceptance/</guid><description>리액트 테스트는 왜 고통스러울까요? 수많은 라이브러리로 이루어진 생태계 속에서 우리는 어떻게 길을 잃게 될까요? 어느 냉소적인 개발자의 리액트 입문서, 그 마지막 여정에서 우리는 마침내 체념과 평화를 얻게 됩니다.</description><pubDate>Sat, 23 Aug 2025 06:51:32 GMT</pubDate></item><item><title>리액트를 배우셨군요 유감입니다 3편 (useEffect와 Props Drilling이라는 지옥도)</title><link>https://cpro95.github.io/posts/2025-08-23-react-a-satirical-guide-part-3-useeffect-props-hell/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-08-23-react-a-satirical-guide-part-3-useeffect-props-hell/</guid><description>리액트의 useEffect가 왜 버그의 온상인지, Props Drilling이 왜 고통스러운지, 그리고 우리가 믿고 있던 성능 최적화 패턴의 배신에 대해 신랄하게 파헤칩니다. 어느 냉소적인 개발자의 리액트 입문서, 그 세 번째 이야기.</description><pubDate>Sat, 23 Aug 2025 06:45:50 GMT</pubDate></item><item><title>리액트를 배우셨군요 유감입니다 2편 (JSX와 컴포넌트, 아무도 원치 않았던 그 아이)</title><link>https://cpro95.github.io/posts/2025-08-23-react-a-satirical-guide-part-2-jsx-components/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-08-23-react-a-satirical-guide-part-2-jsx-components/</guid><description>리액트의 JSX는 왜 HTML이 아니면서 HTML인 척할까요? 모든 것을 컴포넌트로 만들라는 리액트의 철학은 과연 합리적일까요? 한 해외 개발 서적의 신랄한 시선으로 리액트의 핵심 개념을 파헤쳐 봅니다.</description><pubDate>Sat, 23 Aug 2025 06:40:55 GMT</pubDate></item><item><title>리액트를 배우셨군요 유감입니다 1편 (어느 냉소적인 개발자의 리액트 입문서)</title><link>https://cpro95.github.io/posts/2025-08-23-react-a-satirical-guide-for-the-reluctant-developer/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-08-23-react-a-satirical-guide-for-the-reluctant-developer/</guid><description>왜 우리는 리액트를 증오하면서도 결국 배우게 될까요? 한 해외 개발 서적의 신랄하고 유머러스한 시각을 통해 리액트의 탄생 비화, 자바스크립트 피로감, 그리고 가상돔의 진실을 파헤쳐 봅니다.</description><pubDate>Sat, 23 Aug 2025 06:34:10 GMT</pubDate></item><item><title>React 상태 관리 완벽 가이드 useState부터 TanStack Query까지</title><link>https://cpro95.github.io/posts/2025-07-18-react-state-management-complete-guide/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-07-18-react-state-management-complete-guide/</guid><description>React의 상태 관리 기법을 useState, useReducer, Context API부터 Zustand, TanStack Query와 같은 최신 라이브러리까지 종합적으로 다룹니다. 클라이언트 상태와 서버 상태를 구분하여 올바른 도구를 선택하는 방법을 배워보세요.</description><pubDate>Sat, 19 Jul 2025 02:51:54 GMT</pubDate></item><item><title>왜 TanStack Router는 리액트 개발의 판도를 바꾸는가?</title><link>https://cpro95.github.io/posts/2025-07-15-why-tanstack-router-is-a-game-changer-for-react-apps/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-07-15-why-tanstack-router-is-a-game-changer-for-react-apps/</guid><description>기존 리액트 라우터의 한계를 넘어, 완전한 타입 안정성과 뛰어난 개발 경험(DX)을 제공하는 TanStack Router의 핵심 기능들을 깊이 있게 분석합니다. 이 글을 통해 왜 TanStack Router가 차세대 웹 애플리케이션의 필수 선택지가 되어가고 있는지 확인하세요.</description><pubDate>Wed, 16 Jul 2025 12:59:21 GMT</pubDate></item><item><title>React useState 완전 정복 - 비동기 동작부터 최적화까지 (초보자가 겪는 모든 함정)</title><link>https://cpro95.github.io/posts/2025-07-13-react-usestate-deep-dive-from-basics-to-optimization/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-07-13-react-usestate-deep-dive-from-basics-to-optimization/</guid><description>React의 가장 기본 훅, useState의 모든 것을 알아봅니다. 비동기 업데이트의 함정, 게으른 초기화, 불변성, 클로저 문제부터 useReducer와의 비교, 그리고 React.memo, useCallback, useMemo를 사용한 성능 최적화까지 깊이 있게 탐구합니다.</description><pubDate>Sun, 13 Jul 2025 02:48:08 GMT</pubDate></item><item><title>React useReducer 완전 정복 - useState의 한계를 넘어 구조적인 상태 관리하기</title><link>https://cpro95.github.io/posts/2025-07-13-mastering-react-usereducer-for-structured-state-management/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-07-13-mastering-react-usereducer-for-structured-state-management/</guid><description>useState만으로 상태 관리가 힘들어질 때, useReducer가 어떻게 구원투수가 되는지 알아봅니다. 쇼핑 카트 예제를 통해 상태 로직을 중앙에서 관리하고, 예측 가능하며 테스트하기 쉬운 코드를 작성하는 방법을 깊이 있게 탐구합니다.</description><pubDate>Sun, 13 Jul 2025 01:48:08 GMT</pubDate></item><item><title>React useEffect 완전 정복 - 동기화 관점으로 레벨업하기</title><link>https://cpro95.github.io/posts/2025-07-13-mastering-react-useeffect-the-synchronization-mindset/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-07-13-mastering-react-useeffect-the-synchronization-mindset/</guid><description>useEffect는 단순한 생명주기 훅이 아닙니다. React의 상태를 외부 세계와 동기화하는 관점에서 useEffect의 실행 주기, 의존성 배열의 함정, 클린업 함수의 정확한 타이밍, 그리고 흔한 오용 사례까지 깊이 있게 탐구합니다.</description><pubDate>Sun, 13 Jul 2025 00:48:08 GMT</pubDate></item><item><title>React Context API 완전 정복 - Prop Drilling을 넘어 최적화와 상태 관리 철학까지</title><link>https://cpro95.github.io/posts/2025-07-13-mastering-react-context-api-deep-dive/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-07-13-mastering-react-context-api-deep-dive/</guid><description>React의 내장 상태 관리 도구, Context API의 모든 것을 알아봅니다. prop drilling 문제 해결부터 내부 동작 원리, useMemo를 활용한 최적화, 그리고 Redux, Zustand와의 비교를 통해 언제 Context를 사용해야 하는지 깊이 있게 탐구합니다.</description><pubDate>Sat, 12 Jul 2025 23:48:08 GMT</pubDate></item><item><title>React의 진짜 반응성 - 35줄 코드로 Context API의 함정 넘어서기</title><link>https://cpro95.github.io/posts/2025-07-13-fine-grained-reactivity-is-easy/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-07-13-fine-grained-reactivity-is-easy/</guid><description>React의 반응성은 정말 어려운 걸까요? Context API가 왜 불필요한 리렌더링을 유발하는지, 그리고 단 35줄의 코드로 Zustand와 같은 선택자 기반의 진정한 반응성을 구현하는 방법을 알아봅니다.</description><pubDate>Sat, 12 Jul 2025 22:48:08 GMT</pubDate></item><item><title>React와 함수형 프로그래밍 - 더 나은 코드를 위한 핵심 원칙</title><link>https://cpro95.github.io/posts/2025-07-12-functional-programming-principles-in-react/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-07-12-functional-programming-principles-in-react/</guid><description>React는 단순한 라이브러리가 아니라 사고방식입니다. 순수 함수, 불변성, 고차 컴포넌트, 컴포지션 등 함수형 프로그래밍의 핵심 원칙들이 어떻게 React를 더 예측 가능하고 강력하게 만드는지 깊이 있게 탐구합니다.</description><pubDate>Sat, 12 Jul 2025 12:41:31 GMT</pubDate></item><item><title>React와 React-DOM의 아키텍처 - 뇌와 손은 어떻게 분리되었나?</title><link>https://cpro95.github.io/posts/2025-07-12-react-and-react-dom-architecture-deep-dive/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-07-12-react-and-react-dom-architecture-deep-dive/</guid><description>React가 왜 react와 react-dom 두 개의 패키지로 나뉘어 있는지, 그 심오한 설계 철학을 알아봅니다. 뇌 역할을 하는 React와 손 역할을 하는 React-DOM의 관계를 통해, 플랫폼에 구애받지 않는 React의 이식성과 미래를 탐구합니다.</description><pubDate>Sat, 12 Jul 2025 11:54:50 GMT</pubDate></item><item><title>React Element 완전 정복 - 컴포넌트와 인스턴스는 무엇이 다른가?</title><link>https://cpro95.github.io/posts/2025-07-11-react-element-deep-dive/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-07-11-react-element-deep-dive/</guid><description>React의 가장 작은 벽돌, React Element의 모든 것을 알아봅니다. JSX가 어떻게 평범한 자바스크립트 객체로 변환되는지, 그리고 재조정(Reconciliation) 과정에서 엘리먼트와 key가 어떻게 동작하는지 깊이 있게 탐구합니다.</description><pubDate>Fri, 11 Jul 2025 11:51:11 GMT</pubDate></item><item><title>React 개발자 레벨업 - 명령형 vs 선언형, 당신은 어떻게 코딩하고 있나요?</title><link>https://cpro95.github.io/posts/2025-07-10-react-declarative-vs-imperative-programming-mindset/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-07-10-react-declarative-vs-imperative-programming-mindset/</guid><description>더 나은 React 개발자가 되기 위한 필수 개념, 명령형과 선언형 프로그래밍을 알아봅니다. React가 왜 선언형 패러다임을 선택했는지, 그리고 언제 명령형 접근이 필요한지 useRef 예제와 함께 깊이 있게 탐구합니다.</description><pubDate>Thu, 10 Jul 2025 11:48:28 GMT</pubDate></item><item><title>CORS 에러, 더 이상 두렵지 않다 (완전 정복 가이드)</title><link>https://cpro95.github.io/posts/2025-07-09-complete-guide-to-understanding-cors/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-07-09-complete-guide-to-understanding-cors/</guid><description>Cross-Origin Request Blocked 에러의 정체는 무엇일까요? 웹 보안의 핵심인 동일 출처 정책부터 CORS 헤더, 프리플라이트 요청의 흐름, 그리고 흔한 에러 해결법까지, CORS의 모든 것을 알아봅니다.</description><pubDate>Wed, 09 Jul 2025 11:43:10 GMT</pubDate></item><item><title>React 18의 숨겨진 보석, useSyncExternalStore 완벽 가이드 (feat. LocalStorage)</title><link>https://cpro95.github.io/posts/2025-07-08-react-usesyncexternalstore-guide-with-localstorage/</link><guid isPermaLink="true">https://cpro95.github.io/posts/2025-07-08-react-usesyncexternalstore-guide-with-localstorage/</guid><description>React의 상태 찢어짐(tearing) 문제는 무엇이며, React 18의 useSyncExternalStore 훅이 이 문제를 어떻게 해결하는지 알아봅니다. LocalStorage와 연동하여 여러 브라우저 탭 간에 상태를 동기화하는 실용적인 예제를 통해 완벽하게 마스터해 보세요.</description><pubDate>Tue, 08 Jul 2025 11:51:11 GMT</pubDate></item><item><title>안녕하세요? 주인장입니다.</title><link>https://cpro95.github.io/posts/hello/</link><guid isPermaLink="true">https://cpro95.github.io/posts/hello/</guid><description>코딩 관련 정보를 공유코자 여러 사이트르 만들었습니다.</description><pubDate>Tue, 13 Feb 2024 11:51:11 GMT</pubDate></item></channel></rss>